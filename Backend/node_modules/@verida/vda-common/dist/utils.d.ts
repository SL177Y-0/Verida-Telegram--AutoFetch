import { BigNumberish } from 'ethers';
import { BlockchainAnchor } from '@verida/types';
export declare function interpretIdentifier(identifier: string): {
    address: string;
    publicKey?: string;
    network?: BlockchainAnchor;
};
/**
 * Map the network part of the DID to the BlockchanAnchor.
 * @dev Get the `BlockchainAnchor` type from the `BlockchainAnchor` string or chain strings created in the previous version.
 * This function is back-ward compatiblity.
 * There are DIDs such as `did:vda:mainnet:0x....` and `did:vda:testnet:0x...` that were created in the previous version
 * @param networkString
 * @returns
 */
export declare function mapDidNetworkToBlockchainAnchor(networkString: string): BlockchainAnchor | undefined;
export declare function getVeridaSignWithNonce(rawMsg: string, privateKey: string, nonce: BigNumberish): string;
export declare const getVeridaSign: (rawMsg: string, privateKey: string) => string;
