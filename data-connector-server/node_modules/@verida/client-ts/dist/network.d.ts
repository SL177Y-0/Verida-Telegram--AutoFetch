import { NetworkConnectionConfig } from "@verida/types";
import { Context } from ".";
/**
 * @category
 * Modules
 */
declare class Network {
    protected rpcUrls: Record<string, string>;
    setRpcUrls(rpcUrls: Record<string, string>): void;
    /**
     * Opens a new application context to provide encrypted storage and messaging to an application.
     *
     * This is a quicker alternative to generating a `client` connection to the Verida network
     * and then opening a context.
     *
     * @param config NetworkConnectionConfig Configuration
     * @returns {Context | undefined} If the user logs in a valid `Context` object is returned. If an unexpected error occurs or the user cancels the login attempt then nothing is returned.
     */
    connect(config: NetworkConnectionConfig): Promise<Context | undefined>;
    getRecord(veridaUri: string, encoded?: boolean): Promise<any>;
}
declare const _default: Network;
export default _default;
